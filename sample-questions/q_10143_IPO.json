{
  "question": {
    "qid": "q_10143",
    "diff": 3,
    "tags": ["Heap", "Greedy"],
    "title": "IPO",
    "prompt": [
      "Suppose AlgoBytes will start its IPO soon. In order to sell a good price of its shares to Venture Capital, AlgoBytes would like to work on some projects to increase its capital before the IPO. Since it has limited resources, it can only finish at most {{ k }} distinct projects before the IPO. Help AlgoBytes design the best way to maximize its total capital after finishing at most {{ k }} distinct projects."
    ],
    "examples": [
      {
        "input": "k = 2, w = 0, profits = [1,2,3], capital = [0,1,1]",
        "output": "4",
        "explanations": [
          "Since your initial capital is 0, you can only start the project indexed 0.",
          "After finishing it you will obtain profit 1 and your capital becomes 1.",
          "With capital 1, you can either start the project indexed 1 or the project indexed 2.",
          "Since you can choose at most 2 projects, you need to finish the project indexed 2 to get the maximum capital.",
          "Therefore, output the final maximized capital, which is 0 + 1 + 3 = 4."
        ]
      }
    ],
    "constraints": [
      "1 <= k <= 10^5",
      "0 <= w[i], p[i] <= 10^4",
      "1 <= len(w) <= 10^5",
      "1 <= len(p) <= 10^5",
      "len(w) == len(p)"
    ],
    "functionArguments": ["k", "w", "profits", "capital"],
    "hints": [
      "Use two priority queues, one to store available projects and another to store projects under consideration. Always pick the project with the highest profit from available projects and push it into consideration queue."
    ]
  },
  "testcases": [
    { "tid": "1", "input": [2, 0, [1, 2, 3], [0, 1, 1]], "expected": 4 }
  ],
  "submitted": 0,
  "accepted": 0,
  "questionLevel": 1
}
